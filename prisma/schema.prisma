generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int        @id @default(autoincrement())
  name        String
  email       String     @unique
  password    String
  phoneNumber String
  isAdmin     Boolean    @default(false)
  address     Address[]
  cart        Cart?
  wishlist    Wishlist[]
}

model Wishlist {
  id        Int  @id @default(autoincrement())
  productId Int
  userId    Int
  user      User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Address {
  id      Int    @id @default(autoincrement())
  address String
  city    String
  state   String
  zip     Int
  userId  Int
  user    User   @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Review {
  id          Int     @id @default(autoincrement())
  title       String
  description String
  rating      Int
  productId   Int
  userId      Int
  product     Product @relation(fields: [productId], references: [id])
}

model Variant {
  id        Int      @id @default(autoincrement())
  color     String
  images    String[]
  productId Int
  material  String
  product   Product  @relation(fields: [productId], references: [id])
}

model Product {
  id            Int       @id @default(autoincrement())
  name          String
  description   String
  price         Float
  stock         Int
  salePrice     Float
  new           Boolean
  originalPrice Float
  quantity      Int
  sale          Boolean
  sizes         String[]
  sold          Int
  type          String
  luxury        Boolean   @default(false)
  category      String[]
  reviews       Review[]
  variants      Variant[]
}

model Cart {
  id        Int        @id @default(autoincrement())
  userId    Int        @unique
  user      User       @relation(fields: [userId], references: [id])
  cartItems CartItem[]
}

model CartItem {
  id        Int     @id @default(autoincrement())
  cartId    Int
  productId Int
  quantity  Int     @default(1)
  size      String?
  color     String?
  cart      Cart    @relation(fields: [cartId], references: [id])
}

model Token {
  id               Int    @id @default(autoincrement())
  Token            String
  EncryptedToken   String
  issuedAt         BigInt
  expiresAt        BigInt
  sessionExpiredAt BigInt
}
